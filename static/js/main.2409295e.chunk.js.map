{"version":3,"sources":["assets/sounds/1.mp3","assets/sounds/2.mp3","assets/sounds/3.mp3","assets/sounds/4.mp3","components/game-area-item/game-area-item.js","components/game-area/game-area.js","components/options-rounds/options-round.js","components/start-button/start-button.js","components/difficulty-levels/difficulty-levels.js","components/options-area/options-area.js","App.js","index.js"],"names":["module","exports","GameAreaItem","this","props","id","color","active","onActive","classNames","onClick","className","data-id","Component","GameArea","generateItem","arr","map","item","key","buttons","elems","OptionsRound","round","maxRounds","StartButton","startGame","DifficultyLevels","level","delay","text","setDelay","type","name","data-level","data-delay","defaultChecked","OptionsArea","diffs","App","randomKey","Math","random","toString","substr","randomNum","generateStep","setState","gameSequence","newArr","newStep","length","push","clearSequence","start","userSequence","fillUserSequence","state","findIndex","compareSequences","equals","forEach","i","demoSequence","step","setTimeout","btn","activeState","then","isGaming","gameSession","catch","console","log","a","updateActive","playSound","newRound","roundNum","updateMaxRounds","startNewRound","compareResult","gameOver","localStorage","getItem","setItem","sound","play","show","Audio","soundBlue","soundRed","soundYellow","soundGreen","difficulties","href","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2409295e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/1.99e50f7d.mp3\";","module.exports = __webpack_public_path__ + \"static/media/2.d2c4a2c4.mp3\";","module.exports = __webpack_public_path__ + \"static/media/3.c1c96b44.mp3\";","module.exports = __webpack_public_path__ + \"static/media/4.36d5a722.mp3\";","import React, {Component} from \"react\";\r\nimport './game-area-item.sass'\r\n\r\nclass GameAreaItem extends Component {\r\n  render() {\r\n    const {id, color, active, onActive} = this.props\r\n    let classNames = `${color}`\r\n    classNames += (active) ? ` ${color}_active` : ''\r\n\r\n    return (\r\n        <>\r\n          <button onClick={onActive}\r\n                  className={classNames}\r\n                  data-id={id}>\r\n          </button>\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default GameAreaItem\r\n","import React, {Component} from \"react\";\r\n\r\nimport GameAreaItem from \"../game-area-item/game-area-item\";\r\n\r\nimport './game-area.sass'\r\n\r\nclass GameArea extends Component {\r\n  generateItem = (arr) => {\r\n    const {onActive} = this.props\r\n    const newArr = arr.map(item => {\r\n      return (\r\n          <li key={item.key}>\r\n            <GameAreaItem\r\n                onActive={() => onActive(item.key)}\r\n                color={item.color}\r\n                id={item.id}\r\n                active={item.active}\r\n            />\r\n          </li>\r\n      )\r\n    })\r\n\r\n    return newArr\r\n  }\r\n\r\n  render() {\r\n    const {buttons} = this.props\r\n    const elems = this.generateItem(buttons)\r\n    return (\r\n        <ul className=\"game-area\">\r\n          {elems}\r\n        </ul>\r\n    )\r\n\r\n  }\r\n}\r\n\r\nexport default GameArea\r\n","import React, {Component} from \"react\";\r\n\r\nimport './options-round.sass'\r\n\r\nexport default class OptionsRound extends Component {\r\n  render() {\r\n    const {round, maxRounds} = this.props\r\n\r\n    return (\r\n        <>\r\n          <h2>Round {round}</h2>\r\n          <p>Record {maxRounds}</p>\r\n        </>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport './start-button.sass'\r\n\r\nexport default class StartButton extends Component {\r\n  render() {\r\n    const {startGame} = this.props\r\n\r\n    return (\r\n        <button onClick={startGame}>Start</button>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport './difficulty-levels.sass'\r\n\r\nexport default class DifficultyLevels extends Component {\r\n  render() {\r\n    const {level, delay, text, setDelay} = this.props\r\n    return (\r\n      <>\r\n        <input type=\"radio\"\r\n               name=\"difficulty\"\r\n               className=\"difficulty-levels\"\r\n               data-level={level}\r\n               data-delay={delay}\r\n               defaultChecked={delay === 1500}\r\n               onClick={setDelay}\r\n        />\r\n        {text}\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\n\r\nimport OptionsRound from \"../options-rounds/options-round\";\r\nimport StartButton from \"../start-button/start-button\";\r\nimport DifficultyLevels from \"../difficulty-levels/difficulty-levels\";\r\n\r\nimport './options-area.sass'\r\n\r\n\r\nexport default class OptionsArea extends Component {\r\n  generateItem = (arr) => {\r\n    const {setDelay} = this.props\r\n    return arr.map(item => {\r\n      return (\r\n          <label key={item.key}>\r\n            <DifficultyLevels\r\n                level={item.level}\r\n                delay={item.delay}\r\n                text={item.text}\r\n                setDelay={() => setDelay(item.delay)}\r\n            />\r\n          </label>\r\n      )\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const {startGame, diffs, round, maxRounds} = this.props\r\n\r\n    const elems = this.generateItem(diffs)\r\n\r\n    return(\r\n        <div className=\"options-area\">\r\n          <OptionsRound round={round} maxRounds={maxRounds}/>\r\n          <StartButton startGame={() => startGame()}/>\r\n          <div className=\"diff-levels\">\r\n            {elems}\r\n          </div>\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, {Component} from 'react';\n\nimport './App.sass'\n\nimport GameArea from './components/game-area/game-area'\nimport OptionsArea from \"./components/options-area/options-area\";\n\nimport soundBlue from './assets/sounds/1.mp3'\nimport soundRed from './assets/sounds/2.mp3'\nimport soundYellow from './assets/sounds/3.mp3'\nimport soundGreen from './assets/sounds/4.mp3'\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      round: 0,\n      maxRounds: (localStorage.getItem('maxRounds') === null) ? 0 : localStorage.getItem('maxRounds'),\n      delay: 1500,\n      gameSequence: [],\n      userSequence: [],\n      isGaming: false,\n      buttons: [\n        {color: 'blue', sound: new Audio(soundBlue), key: this.randomKey(), id: 1, active: false},\n        {color: 'red', sound: new Audio(soundRed), key: this.randomKey(), id: 2, active: false},\n        {color: 'yellow', sound: new Audio(soundYellow), key: this.randomKey(), id: 3, active: false},\n        {color: 'green', sound: new Audio(soundGreen), key: this.randomKey(), id: 4, active: false},\n      ],\n      difficulties: [\n        {level: 'easy', delay: 1500, text: 'Легкий', key: this.randomKey()},\n        {level: 'medium', delay: 1000, text: 'Средний', key: this.randomKey()},\n        {level: 'hard', delay: 400, text: 'Сложный', key: this.randomKey()}\n      ],\n    }\n  }\n\n  // generators\n  randomKey = () => {\n    return Math.random().toString(36).substr(6)\n  } // return string in 6 chars\n  randomNum = () => {\n    return Math.round(0.5 + Math.random() * 4)\n  } // return number in 1 through 4\n  generateStep = () => {\n    this.setState(({gameSequence}) => {\n      const newArr = [...gameSequence]\n\n      while (true) {\n        const newStep = this.randomNum()\n        if (newStep !== newArr[newArr.length - 1]) {\n          newArr.push(newStep)\n          break\n        }\n      }\n\n      return {\n        gameSequence: newArr\n      }\n    })\n  } // push new elem to gameSequence\n\n\n  // work with sequences\n  clearSequence = (start = false) => {\n    if (start) {\n      this.setState({\n        userSequence: [],\n        gameSequence: []\n      })\n    } else {\n      this.setState({userSequence: []})\n    }\n  } // clear the sequences\n  fillUserSequence = (key) => {\n    this.setState(({userSequence}) => {\n      const {buttons} = this.state\n      const newArr = [...userSequence]\n      newArr.push(buttons.findIndex(item => item.key === key) + 1)\n\n      return {\n        userSequence: newArr\n      }\n    })\n  } // add new num to userSequence\n  compareSequences = () => {\n    const {gameSequence, userSequence} = this.state\n\n    if (userSequence.length > gameSequence.length) {\n      return false\n    } else {\n      let equals = 0\n      userSequence.forEach((item, i) => {\n        if (item === gameSequence[i]) {\n          equals++\n        }\n      })\n      if (equals === userSequence.length) {\n        return true\n      }\n    }\n  } // compares userSequence and gameSequence\n  demoSequence = () => {\n    const {gameSequence, buttons, delay} = this.state\n\n    gameSequence.forEach((step, i) => { // iterating gameSequence array\n      setTimeout(() => {\n\n        buttons.forEach(btn => { // iterating buttons array\n          if (btn.id === step) {\n            this.activeState(btn.key)\n          }\n        })\n\n      }, delay * i)\n    })\n  } // show gameSequence\n\n\n  // active state\n  onActive = (key) => {\n    this.activeState(key)\n        .then(() => {\n          const {isGaming} = this.state\n          if (isGaming) {\n            this.fillUserSequence(key)\n            this.gameSession()\n                .catch(() => console.log('Произошла ошибка'))\n          }\n        })\n  } // active state for buttons and update userSequence\n  activeState = async (key) => {\n    this.updateActive(key)\n    this.playSound(key)\n    await setTimeout(() => {this.updateActive(key)}, 200)\n  } // active state for demonstrations\n  updateActive = (key) => {\n    this.setState(({buttons}) => {\n      const newArr = [...buttons]\n\n      newArr.forEach(item => {\n        if (item.key === key) {\n          item.active = !item.active\n        }\n      })\n\n      return {\n        buttons: newArr\n      }\n    })\n  } // update active button's state\n\n\n  // rounds\n  newRound = async (start = false) => {\n    this.setState(({round}) => {\n      const roundNum = (start) ? 1 : ++round\n\n      this.updateMaxRounds(roundNum)\n\n      return {\n        round: roundNum\n      }\n    })\n    await this.clearSequence(start)\n    await this.generateStep()\n  } // change round number and call generateStep() and demoSequence\n  startNewRound = () => {\n    this.newRound()\n        .then(() => console.log('Start Round ' + this.state.round))\n        .then(this.demoSequence)\n\n  } // new round\n\n\n  // game process\n  startGame = () => {\n    this.setState({isGaming: true})\n    this.newRound(true)\n        .then(() => console.log('Start Round 1'))\n        .then(this.demoSequence)\n\n    console.log('Game is start')\n  } // start gameSession\n  gameSession = async () => {\n    const {gameSequence, userSequence} = this.state\n    const compareResult = await this.compareSequences()\n\n    if (!compareResult) {\n      this.gameOver()\n    } else if (userSequence.length === gameSequence.length && compareResult) {\n      setTimeout(this.startNewRound, 1000)\n    }\n  } // data processing of sequences\n  gameOver = () => {\n    this.clearSequence(true)\n    this.setState({\n      maxRounds: localStorage.getItem('maxRounds'),\n      round: 0,\n      isGaming: false\n    })\n\n    console.log('Game Over :(')\n  } // end game session\n\n\n  // other\n  updateMaxRounds = (round) => {\n    if ((localStorage.getItem('maxRounds') &&\n        localStorage.getItem('maxRounds') < round) ||\n        localStorage.getItem('maxRounds') === null) {\n\n      localStorage.setItem('maxRounds', round)\n    }\n  }\n  setDelay = (delay) => {\n    this.setState({delay})\n  } // delay between activating buttons\n  playSound = (key) => {\n    const {buttons} = this.state\n    buttons.forEach(item => {\n      if (item.key === key) {\n        item.sound.play()\n      }\n    })\n  } // click or demo to play sound\n  show = () => {\n    const {userSequence, gameSequence} = this.state\n    console.log(`user: ${userSequence}`)\n    console.log(`game: ${gameSequence}`)\n    console.log(`delay: ${this.state.delay}`)\n  } // dev func\n\n  render() {\n    return (\n      <>\n        <div className=\"background\"></div>\n        <div className=\"app\">\n          <section className=\"app__content\">\n            <header className=\"header\">\n              <h1 className=\"header__title\" onClick={this.show}>\n                <span className=\"blue\">Sim</span>\n                <span className=\"red\">on</span>\n                &#160;\n                <span className=\"yellow\">Sa</span>\n                <span className=\"green\">y's</span>\n              </h1>\n            </header>\n            <main>\n              <GameArea\n                buttons={this.state.buttons}\n                onActive={this.onActive}\n              />\n              <OptionsArea\n                  round={this.state.round}\n                  maxRounds={this.state.maxRounds}\n                  startGame={this.startGame}\n                  diffs={this.state.difficulties}\n                  setDelay={this.setDelay}\n              />\n            </main>\n          </section>\n          <footer>\n            <p>©Copyright - 2020</p>\n            <p>Created by <a href=\"https://github.com/K1nGsmaN-hub\" target=\"_blank\">K1nGsmaN</a></p>\n          </footer>\n        </div>\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}